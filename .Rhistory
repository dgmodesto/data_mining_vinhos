aggregate(Vinhos[,-13],
by = list( train$Vinho),
FUN = mean)
aggregate(Vinhos[,-13],
by = list(base$Vinho),
FUN = mean)
aggregate(train[,-13],
by = list(train$Vinho),
FUN = mean)
aggregate( base[,-13],
by = list(base$Vinho),
FUN = mean)
aggregate(base[,-13],
by = list(base$Vinho),
FUN = median)
aggregate(base[,-13],
by = list(base$Vinho),
FUN = median)
aggregate(base[1,-13],
by = list(base$Vinho),
FUN = median)
aggregate(base[,-13],
by = list(base$Vinho),
FUN = median)
mean(base$fixedacidity) # m?dia
median(Vinhos$fixedacidity) # mediana
median(base$fixedacidity) # mediana
quantile(Vinhos$fixedacidity,type=4)  # Quartis
quantile(base$fixedacidity,type=4)  # Quartis
quantile(base$fixedacidity,.65,type=4) # exato percentil
range(base$fixedacidity)  # amplitude
diff(range(base$fixedacidity)) #diferen?a entre o maior e o menor valor
min(base$fixedacidity)  # valor m?nimo de x
max(base$fixedacidity)  # valor maximo de x
var(base$fixedacidity) # para obter a variancia
sd(base$fixedacidity)  # para obter o desvio padrao
# para obter o coefiiente de variacao
CV_fixedacidity
CV_fixedacidity<-sd(base$fixedacidity)/mean(base$fixedacidity)*100
# para obter o coefiiente de variacao
CV_fixedacidity
#comando para gerar em 3 linhas e 4 colunas os histogramas
par (mfrow=c(3,4))
hist(fixedacidity)
hist(volatileacidity)
hist(citricacid )
hist(residualsugar)
hist(chlorides)
hist(freesulfurdioxide)
hist(totalsulfurdioxide)
hist(density)
hist(pH)
hist(sulphates)
hist(alcohol)
hist(quality)
dev.off()
hist(quality, col=c("pink"), col.main="darkgray", prob=T)
attach(Vinhos)
#comando para gerar em 3 linhas e 4 colunas os histogramas
par (mfrow=c(3,4))
hist(fixedacidity)
hist(volatileacidity)
hist(citricacid )
hist(residualsugar)
hist(chlorides)
hist(freesulfurdioxide)
hist(totalsulfurdioxide)
hist(density)
hist(pH)
hist(sulphates)
hist(alcohol)
hist(quality)
dev.off()
hist(quality, col=c("pink"), col.main="darkgray", prob=T)
attach(base)
#comando para gerar em 3 linhas e 4 colunas os histogramas
par (mfrow=c(3,4))
hist(fixedacidity)
hist(volatileacidity)
hist(citricacid )
hist(residualsugar)
hist(chlorides)
hist(freesulfurdioxide)
hist(totalsulfurdioxide)
hist(density)
hist(pH)
hist(sulphates)
hist(alcohol)
hist(quality)
dev.off()
hist(quality, col=c("pink"), col.main="darkgray", prob=T)
attach(base)
#comando para gerar em 3 linhas e 4 colunas os histogramas
par (mfrow=c(3,4))
hist(fixedacidity)
hist(volatileacidity)
hist(citricacid )
hist(residualsugar)
hist(chlorides)
hist(freesulfurdioxide)
hist(totalsulfurdioxide)
hist(density)
hist(pH)
hist(sulphates)
hist(alcohol)
hist(quality)
#dev.off()
hist(quality, col=c("pink"), col.main="darkgray", prob=T)
attach(base)
#comando para gerar em 3 linhas e 4 colunas os histogramas
par (mfrow=c(3,4))
boxplot(fixedacidity, main='fixedacidity')
boxplot(volatileacidity , main='volatileacidity')
boxplot(citricacid , main='citricacid')
boxplot(residualsugar, main='residualsugar')
boxplot(chlorides, main='chlorides')
boxplot(freesulfurdioxide, main='freesulfurdioxide')
boxplot(totalsulfurdioxide, main='totalsulfurdioxide')
boxplot(density, main='density')
boxplot(pH, main='pH')
boxplot(sulphates, main='sulphates')
boxplot(alcohol, main='alcohol')
boxplot(Vinhos$quality, main='quality')
par (mfrow=c(3,4))
boxplot(fixedacidity ~ Vinho, main='fixedacidity',col=c('red','blue'))
boxplot(volatileacidity ~ Vinho , main='volatileacidity')
boxplot(citricacid ~ Vinho, main='citricacid')
boxplot(residualsugar ~ Vinho, main='residualsugar',col=c('red','blue'))
boxplot(chlorides ~ Vinho, main='chlorides')
boxplot(freesulfurdioxide ~ Vinho, main='freesulfurdioxide')
boxplot(totalsulfurdioxide ~ Vinho, main='totalsulfurdioxide')
boxplot(density ~ Vinho, main='density')
boxplot(pH ~ Vinho, main='pH')
boxplot(sulphates ~ Vinho, main='sulphates')
boxplot(alcohol ~ Vinho, main='alcohol')
# Grafico de dispersao ( pch=caracter, lwd=largura)
plot(freesulfurdioxide~totalsulfurdioxide)
plot(freesulfurdioxide~totalsulfurdioxide, pch=1, lwd=3)
plot(freesulfurdioxide~totalsulfurdioxide)
abline(v=mean(freesulfurdioxide), col="red")
abline(h=mean(totalsulfurdioxide), col="green")
attach(Vinhos)
attach(base)
Vinhos$fx_redSugar <- cut(residualsugar,breaks=c(0,10,20,30,max(residualsugar)))
attach(base)
base$fx_redSugar <- cut(residualsugar,breaks=c(0,10,20,30,max(residualsugar)))
base$fx_redSugar
str(base)
CrossTable(base$fx_redSugar , base$Vinho)
library(psych)
install.packages('psych')
install.packages('psych')
library('psych')
describe(base)
attach(base)
describe(base)
# describe
# A data.frame of the relevant statistics:
# item name
# item number
# number of valid cases
# mean
# standard deviation
# trimmed mean (with trim defaulting to .1)
# median (standard or interpolated
# mad: median absolute deviation (from the median)
# minimum
# maximum
# skew
# kurtosis
# standard error
summary(Vinhos)
attach(base)
describe(base)
# describe
# A data.frame of the relevant statistics:
# item name
# item number
# number of valid cases
# mean
# standard deviation
# trimmed mean (with trim defaulting to .1)
# median (standard or interpolated
# mad: median absolute deviation (from the median)
# minimum
# maximum
# skew
# kurtosis
# standard error
summary(base)
white <- subset(base, Vinho=="WHITE", select=c(quality,fixedacidity,volatileacidity,citricacid,residualsugar,
chlorides,freesulfurdioxide,totalsulfurdioxide,density,pH,
sulphates,alcohol))
#Estat?sticas descritivas
summary(white)
str(white)
attach(white)
#Estatasticas descritivas
par (mfrow=c(3,4))
boxplot(fixedacidity, main='fixedacidity')
boxplot(volatileacidity , main='volatileacidity')
boxplot(citricacid , main='citricacid')
boxplot(residualsugar, main='residualsugar')
boxplot(chlorides, main='chlorides')
boxplot(freesulfurdioxide, main='freesulfurdioxide')
boxplot(totalsulfurdioxide, main='totalsulfurdioxide')
boxplot(density, main='density')
boxplot(pH, main='pH')
boxplot(sulphates, main='sulphates')
boxplot(alcohol, main='alcohol')
boxplot(quality, main='quality')
#dev.off()
boxplot.stats(white$residualsugar)
AIQ_residualsugar<-quantile(white$residualsugar,.75,type=2)-quantile(white$residualsugar,.25,type=2)
AIQ_residualsugar
limsup_residualsugar= quantile(white$residualsugar,.75,type=4)+1.5*AIQ_residualsugar
limsup_residualsugar
liminf_residualsugar= quantile(white$residualsugar,.25,type=2)-1.5*AIQ_residualsugar
liminf_residualsugar
#excluir outliers
plot(quality~residualsugar)
white1<-subset(white, residualsugar<=40)
fix(white1)
attach(white1)
summary <- summary(white1)
show(summary)
plot(residualsugar,alcohol)
abline(v=mean(residualsugar), col="red")
abline(h=mean(alcohol), col="green")
# matriz de correla??es
matcor <- cor(white1)
print(matcor, digits = 2)
library(corrgram)
install.packages('corrgram')
library('corrgram')
corrgram(matcor, type = "cor", lower.panel = panel.shade, upper.panel = panel.pie)
panel.cor <- function(x, y, digits=2, prefix ="", cex.cor,
...)  {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y , use = "pairwise.complete.obs")
txt <- format(c(r, 0.123456789), digits = digits) [1]
txt <- paste(prefix, txt, sep = "")
if (missing(cex.cor))
cex <- 0.8/strwidth(txt)
# abs(r) ? para que na sa?da as correla??es ficam proporcionais
text(0.5, 0.5, txt, cex = cex * abs(r))
}
#pdf(file = "grafico.pdf")
pairs(white1, lower.panel=panel.smooth, upper.panel=panel.cor)
shiny::runApp()
runApp()
runApp()
install.packages("shiny")
install.packages("shiny")
shiny::runApp()
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shinydashboard")
install.packages("shinydashboard")
install.packages("markdown")
library(shiny)
library(shinydashboard)
library(markdown)
ui <- dashboardPage(
dashboardHeader(title = "Trabalho Final"),
dashboardSidebar(
sidebarMenu(
menuItem("Capa", tabName = "capa", icon = icon("th")),
menuItem("Sobre", tabName = "sobre", icon = icon("th")),
menuItem("ConteÃºdo", tabName = "conteudo", icon = icon("th"))
)
),
dashboardBody(
tabItems(
tabItem(tabName = "capa",
fluidRow(
includeHTML("./capa.html")
)
),
tabItem(tabName = "sobre",
fluidRow(
includeHTML("./sobre.html")
)
),
tabItem(tabName = "conteudo",
fluidRow(
includeHTML("./NYC_TAXI.html")
)
)
)
)
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
runApp()
runApp()
## 75% of the sample size
smp_size <- floor(0.7 * nrow(base))
## set the seed to make your partition reproducible
set.seed(1)
train_ind <- sample(seq_len(nrow(base)), size = smp_size)
train <- base[train_ind, ]
test <- base[-train_ind, ]
summary(train)
summary(train)
sum(is.na(train))
sum(is.na(test))
dim(train)
dim(test)
dim(train)
dim(test)
str(train)
#mostra o nome das colunas
names(train)
attach(train)
CrossTable(as.factor(train$quality), train$Vinho)
CrossTable(as.factor(train$quality), train$Vinho)
library('dplyr')
library('readr')
library('plotly')
library('scales')
library('hexbin')
library('rgdal')
library('RColorBrewer')
library('sp')
library('leaflet')
library('bindrcpp')
library('magrittr')
library('dplyr')
library('ggplot2')
library('lubridate')
library('grid')
library('gmodels')
library('psych')
library('corrgram')
CrossTable(as.factor(train$quality), train$Vinho)
aggregate( base[,-13],
by = list(base$Vinho),
FUN = mean)
aggregate( base[,-13],
by = list(train$Vinho),
FUN = mean)
aggregate( train[,-13],
by = list(train$Vinho),
FUN = mean)
aggregate(train[,-13],
by = list(train$Vinho),
FUN = median)
train
mean(train$fixedacidity) # media
median(train$fixedacidity) # mediana
quantile(train$fixedacidity,type=4)  # Quartis
quantile(train$fixedacidity,.65,type=4) # exato percentil
range(train$fixedacidity)  # amplitude
diff(range(train$fixedacidity)) #diferen?a entre o maior e o menor valor
min(train$fixedacidity)  # valor m?nimo de x
max(train$fixedacidity)  # valor maximo de x
var(train$fixedacidity) # para obter a variancia
sd(train$fixedacidity)  # para obter o desvio padrao
CV_fixedacidity<-sd(train$fixedacidity)/mean(train$fixedacidity)*100
#comando para gerar em 3 linhas e 4 colunas os histogramas
par (mfrow=c(3,4))
hist(fixedacidity)
hist(volatileacidity)
hist(citricacid )
hist(residualsugar)
hist(chlorides)
hist(freesulfurdioxide)
hist(totalsulfurdioxide)
hist(density)
hist(pH)
hist(sulphates)
hist(alcohol)
hist(quality)
#dev.off()
hist(quality, col=c("pink"), col.main="darkgray", prob=T)
attach(train)
#comando para gerar em 3 linhas e 4 colunas os histogramas
par (mfrow=c(3,4))
boxplot(fixedacidity, main='fixedacidity')
boxplot(volatileacidity , main='volatileacidity')
boxplot(citricacid , main='citricacid')
boxplot(residualsugar, main='residualsugar')
boxplot(chlorides, main='chlorides')
boxplot(freesulfurdioxide, main='freesulfurdioxide')
boxplot(totalsulfurdioxide, main='totalsulfurdioxide')
boxplot(density, main='density')
boxplot(pH, main='pH')
boxplot(sulphates, main='sulphates')
boxplot(alcohol, main='alcohol')
boxplot(base$quality, main='quality')
#dev.off()
boxplot(quality ~ Vinho, main='quality')
par (mfrow=c(3,4))
boxplot(fixedacidity ~ Vinho, main='fixedacidity',col=c('red','blue'))
boxplot(volatileacidity ~ Vinho , main='volatileacidity')
boxplot(citricacid ~ Vinho, main='citricacid')
boxplot(residualsugar ~ Vinho, main='residualsugar',col=c('red','blue'))
boxplot(chlorides ~ Vinho, main='chlorides')
boxplot(freesulfurdioxide ~ Vinho, main='freesulfurdioxide')
boxplot(totalsulfurdioxide ~ Vinho, main='totalsulfurdioxide')
boxplot(density ~ Vinho, main='density')
boxplot(pH ~ Vinho, main='pH')
boxplot(sulphates ~ Vinho, main='sulphates')
boxplot(alcohol ~ Vinho, main='alcohol')
# Grafico de dispersao ( pch=caracter, lwd=largura)
plot(freesulfurdioxide~totalsulfurdioxide)
plot(freesulfurdioxide~totalsulfurdioxide, pch=1, lwd=3)
plot(freesulfurdioxide~totalsulfurdioxide)
abline(v=mean(freesulfurdioxide), col="red")
abline(h=mean(totalsulfurdioxide), col="green")
attach(train)
train$fx_redSugar <- cut(residualsugar,breaks=c(0,10,20,30,max(residualsugar)))
train$fx_redSugar
str(train)
CrossTable(train$fx_redSugar , train$Vinho)
describe(train)
attach(train)
describe(train)
# describe
# A data.frame of the relevant statistics:
# item name
# item number
# number of valid cases
# mean
# standard deviation
# trimmed mean (with trim defaulting to .1)
# median (standard or interpolated
# mad: median absolute deviation (from the median)
# minimum
# maximum
# skew
# kurtosis
# standard error
summary(base)
white <- subset(base, Vinho=="WHITE", select=c(quality,fixedacidity,volatileacidity,citricacid,residualsugar,
chlorides,freesulfurdioxide,totalsulfurdioxide,density,pH,
sulphates,alcohol))
#Estat?sticas descritivas
summary(white)
str(white)
attach(white)
summary(base)
white <- subset(base, Vinho=="WHITE", select=c(quality,fixedacidity,volatileacidity,citricacid,residualsugar,
chlorides,freesulfurdioxide,totalsulfurdioxide,density,pH,
sulphates,alcohol))
#Estat?sticas descritivas
summary(white)
str(white)
attach(white)
#Estatasticas descritivas
par (mfrow=c(3,4))
boxplot(fixedacidity, main='fixedacidity')
boxplot(volatileacidity , main='volatileacidity')
boxplot(citricacid , main='citricacid')
boxplot(residualsugar, main='residualsugar')
boxplot(chlorides, main='chlorides')
boxplot(freesulfurdioxide, main='freesulfurdioxide')
boxplot(totalsulfurdioxide, main='totalsulfurdioxide')
boxplot(density, main='density')
boxplot(pH, main='pH')
boxplot(sulphates, main='sulphates')
boxplot(alcohol, main='alcohol')
boxplot(quality, main='quality')
#dev.off()
boxplot.stats(white$residualsugar)
AIQ_residualsugar<-quantile(white$residualsugar,.75,type=2)-quantile(white$residualsugar,.25,type=2)
AIQ_residualsugar
limsup_residualsugar= quantile(white$residualsugar,.75,type=4)+1.5*AIQ_residualsugar
limsup_residualsugar
liminf_residualsugar= quantile(white$residualsugar,.25,type=2)-1.5*AIQ_residualsugar
liminf_residualsugar
#excluir outliers
plot(quality~residualsugar)
white1<-subset(white, residualsugar<=40)
fix(white1)
attach(white1)
#excluir outliers
plot(quality~residualsugar)
white1<-subset(white, residualsugar<=40)
#fix(white1)
attach(white1)
summary <- summary(white1)
show(summary)
plot(residualsugar,alcohol)
abline(v=mean(residualsugar), col="red")
abline(h=mean(alcohol), col="green")
# matriz de correla??es
matcor <- cor(white1)
print(matcor, digits = 2)
corrgram(matcor, type = "cor", lower.panel = panel.shade, upper.panel = panel.pie)
panel.cor <- function(x, y, digits=2, prefix ="", cex.cor,
...)  {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y , use = "pairwise.complete.obs")
txt <- format(c(r, 0.123456789), digits = digits) [1]
txt <- paste(prefix, txt, sep = "")
if (missing(cex.cor))
cex <- 0.8/strwidth(txt)
# abs(r) ? para que na sa?da as correla??es ficam proporcionais
text(0.5, 0.5, txt, cex = cex * abs(r))
}
#pdf(file = "grafico.pdf")
pairs(white1, lower.panel=panel.smooth, upper.panel=panel.cor)
